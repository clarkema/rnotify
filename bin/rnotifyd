#! /usr/bin/env ruby
# rnotify - remote OS X notifications over SSH
# Copyright (C) 2012 by Michael Clarke <clarkema at clarkema dot org>
# Maintainer: Michael Clarke <clarkema at clarkema dot org>
#
# This file is part of rnotify.
#
# rnotify is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# rnotify is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with rnotify.  If not, see <http://www.gnu.org/licenses/>.

require 'ostruct'
require 'optparse'
require 'socket'

trap("SIGINT") { exit }

class OptionParser
  def self.parse(args)
    optparse = OptionParser.new do |opts|
      opts.banner = "Usage: rnotifyd [<options>]"

      opts.on( '--autorun', 'Start rnotifyd when you log in.' ) do
        Plist.write
        exit
      end
      opts.on( '--no-autorun', 'Reverse a previous --autorun.' ) do
        Plist.remove
        exit
      end
    end

    optparse.parse!
  end
end

class Plist
  private
  @@plist_label = "com.lambdafunctions.rnotifyd"
  @@plist_path = File.expand_path(
    "~/Library/LaunchAgents/#{@@plist_label}.plist"
  )
  @@executable_path = File.expand_path $0

  @@template = <<EOS
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC -//Apple Computer//DTD PLIST 1.0//EN http://www.apple.com/DTDs/PropertyList-1.0.dtd>
<plist version="1.0">
    <dict>
        <key>Label</key>
        <string>#{@@plist_label}</string>
        <key>Program</key>
        <string>#{@@executable_path}</string>
        <key>KeepAlive</key>
        <true/>
        <key>WorkingDirectory</key>
        <string>/tmp</string>
    </dict>
</plist>
EOS

  public
  def self.write
    begin
      File.open @@plist_path, 'w' do |f|
        f.write @@template
      end
      system("launchctl load #{@@plist_path}")
    rescue Exception => e
      warn "Failed to create launchd plist to automatically start rnotifyd:"
      warn e.message
    end
  end

  def self.remove
    begin
      system("launchctl unload #{@@plist_path}")
      File.exists?(@@plist_path) && File.delete(@@plist_path)
    rescue Exception => e
      warn "Failed to remove launchd plist:"
      warn e.message
    end
  end
end

class Config
  def self.read
    file = File.expand_path( "~/.rnotify" )
    config = {}

    if File.exist?( file )
      File.open( file ).each do |line|
        (k, v) = line.chomp.split(/:\s+/)
        config[k] = v
      end
    end

    unless config['port'] and config['notifier']
      warn "Please configure at least your port and notifier utility"
      warn "in $HOME/.rnotify.  See the README for more."
      exit 1
    end

    config
  end
end

def main
  options = OptionParser.parse(ARGV)
  config  = Config.read
  server  = TCPServer.new config['port']

  loop do
    Thread.start(server.accept) do |client|
      (password, message) = client.gets.split("\t")

      if config['password']
        next unless password == config['password']
      end
      if message
        system( config['notifier'], '-message', message)
      end
      client.close
    end
  end
end

main
